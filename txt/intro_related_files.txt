
==================================================
File: G:\01-Galia\Nueva carpeta\invitacion-matrimonio-astro\src\sections\Intro.astro
==================================================
---
import IntroGallery from '@/components/IntroGallery.tsx';
import '../styles/css/sections/Intro.css';
---

<main id="landing-intro" class="landing-intro" aria-label="Landing Intro">
  <div class="landing-intro__background">
    <div class="background-overlay"></div>
    <section class="floating-balloons" aria-hidden="true">
      {['balloon1', 'balloon2', 'balloon3'].map((balloon, i) => (
        <img 
          src={`/img/${balloon}.svg`} 
          class={`balloon balloon--${i + 1}`} 
          alt="Decorative balloon" 
          loading="lazy" 
          width="120"
          height="160"
        />
      ))}
    </section>
  </div>

  <section class="intro-container">
    <header class="intro-header">
      <h1 class="intro-header__title animate-fade-in">
        ¡Celebra conmigo!
        <div class="intro-header__badge" role="status" aria-label="1 añito">
          <span class="badge__number">1</span>
          <span class="badge__text">añito</span>
        </div>
      </h1>
    </header>

    <p class="intro-description animate-fade-in-up">
      Galia está cumpliendo su primer añito y quiere compartir este día tan especial contigo.
    </p>

    <div class="intro-gallery animate-fade-in-up">
      <IntroGallery client:visible />
    </div>

    <div class="intro-action animate-fade-in-up">
      <button 
        id="enter-button" 
        class="intro-action__button" 
        aria-label="Entrar a la Fiesta"
      >
        <span class="button__text">Entrar a la Fiesta</span>
        <span class="button__shine"></span>
      </button>
    </div>
  </section>
</main>

<script>
  const enterButton = document.getElementById('enter-button');
  
  enterButton?.addEventListener('click', () => {
    // Dispatch custom event to notify index.astro
    const transitionEvent = new CustomEvent('startTransition');
    document.dispatchEvent(transitionEvent);
  });
</script>


==================================================
File: G:\01-Galia\Nueva carpeta\invitacion-matrimonio-astro\src\components\IntroGallery.tsx
==================================================
import React, { useState, useEffect, useCallback, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ChevronLeft, ChevronRight } from 'lucide-react';
import '../styles/css/components/Gallery.css';

interface ImageData {
  src: string;
  caption: string;
}

const IMAGES: ImageData[] = [
  { src: '/galia4.webp', caption: 'Mi primer añito' },
  { src: '/galia/galiamaurogimeplaya.webp', caption: 'Momentos especiales' },
  { src: '/galia/galiarisa.webp', caption: 'Sonrisas de Galia' },
  { src: '/galia/galiahamaca.webp', caption: 'Celebrando juntos' },
];

const AUTOPLAY_DELAY = 4000;
const PAUSE_DURATION = 10000;

const IntroGallery: React.FC = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isPaused, setIsPaused] = useState(false);
  const [isHovered, setIsHovered] = useState(false);
  const timerRef = useRef<ReturnType<typeof setTimeout> | null>(null);

  const updateIndex = useCallback((newIndex: number): void => {
    const normalizedIndex = ((newIndex % IMAGES.length) + IMAGES.length) % IMAGES.length;
    setCurrentIndex(normalizedIndex);
  }, []);

  const handleNext = useCallback((): void => {
    setIsPaused(true);
    updateIndex(currentIndex + 1);
  }, [currentIndex, updateIndex]);

  const handlePrevious = useCallback((): void => {
    setIsPaused(true);
    updateIndex(currentIndex - 1);
  }, [currentIndex, updateIndex]);

  const handleDotClick = useCallback((index: number): void => {
    setIsPaused(true);
    setCurrentIndex(index);
  }, []);

  const handleMouseEnter = useCallback((): void => {
    setIsHovered(true);
    setIsPaused(true);
  }, []);

  const handleMouseLeave = useCallback((): void => {
    setIsHovered(false);
    setIsPaused(false);
  }, []);

  useEffect(() => {
    if (isPaused) {
      if (timerRef.current) clearTimeout(timerRef.current);
      timerRef.current = setTimeout(() => setIsPaused(false), PAUSE_DURATION);
      return () => {
        if (timerRef.current) clearTimeout(timerRef.current);
      };
    }

    const autoPlay = setInterval(() => {
      if (!isHovered) {
        updateIndex(currentIndex + 1);
      }
    }, AUTOPLAY_DELAY);

    return () => clearInterval(autoPlay);
  }, [currentIndex, isPaused, isHovered, updateIndex]);

  const slideVariants = {
    enter: { 
      opacity: 0, 
      scale: 0.95,
      filter: 'blur(10px)'
    },
    center: { 
      opacity: 1, 
      scale: 1,
      filter: 'blur(0px)'
    },
    exit: { 
      opacity: 0, 
      scale: 1.05,
      filter: 'blur(10px)'
    }
  };

  return (
    <div 
      className="gallery-container"
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      <AnimatePresence mode="wait">
        <motion.div
          key={currentIndex}
          className="gallery-wrapper"
          variants={slideVariants}
          initial="enter"
          animate="center"
          exit="exit"
          transition={{ duration: 0.5, ease: "easeInOut" }}
        >
          <motion.img
            src={IMAGES[currentIndex].src}
            alt={IMAGES[currentIndex].caption}
            className="gallery-image"
            loading="lazy"
            style={{
              width: '100%',
              height: '100%',
              objectFit: 'cover',
              borderRadius: '20px'
            }}
          />
          <motion.div 
            className="gallery-caption"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2 }}
          >
            {IMAGES[currentIndex].caption}
          </motion.div>
        </motion.div>
      </AnimatePresence>

      <motion.div 
        className="gallery-controls"
        initial={{ opacity: 0 }}
        animate={{ opacity: isHovered ? 1 : 0 }}
        transition={{ duration: 0.3 }}
      >
        <button
          className="gallery-nav-button prev"
          onClick={handlePrevious}
          aria-label="Imagen anterior"
        >
          <ChevronLeft size={24} />
        </button>

        <button
          className="gallery-nav-button next"
          onClick={handleNext}
          aria-label="Siguiente imagen"
        >
          <ChevronRight size={24} />
        </button>
      </motion.div>

      <div className="gallery-dots" role="tablist">
        {IMAGES.map((_, index) => (
          <button
            key={index}
            className={`gallery-dot ${index === currentIndex ? 'active' : ''}`}
            onClick={() => handleDotClick(index)}
            aria-label={`Imagen ${index + 1}`}
            aria-current={index === currentIndex}
            role="tab"
          />
        ))}
      </div>
    </div>
  );
};

export default IntroGallery;


==================================================
File: G:\01-Galia\Nueva carpeta\invitacion-matrimonio-astro\src\styles/css/components/Gallery.css
==================================================
.gallery-container {
  position: relative;
  width: 100%;
  max-width: 800px;
  aspect-ratio: 16/9;
  overflow: hidden;
  margin: 2rem auto;
  border-radius: 1rem;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
}

.gallery-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  background: #000;
}

.gallery-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.gallery-caption {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 1.5rem;
  background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
  color: white;
  font-size: 1.1rem;
  text-align: center;
}

.gallery-controls {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.gallery-nav-button {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.9);
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  pointer-events: auto;
  transition: all 0.3s ease;
}

.gallery-nav-button:hover {
  background: white;
  transform: translateY(-50%) scale(1.1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.gallery-nav-button:active {
  transform: translateY(-50%) scale(0.95);
}

.gallery-nav-button.prev {
  left: 1rem;
}

.gallery-nav-button.next {
  right: 1rem;
}

.gallery-dots {
  position: absolute;
  bottom: 1rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 0.5rem;
  z-index: 10;
}

.gallery-dot {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  border: none;
  padding: 0;
  cursor: pointer;
  transition: all 0.3s ease;
}

.gallery-dot:hover {
  background: rgba(255, 255, 255, 0.8);
}

.gallery-dot.active {
  background: white;
  transform: scale(1.2);
}

@media (max-width: 768px) {
  .gallery-container {
    aspect-ratio: 4/3;
  }

  .gallery-nav-button {
    width: 36px;
    height: 36px;
  }

  .gallery-caption {
    padding: 1rem;
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .gallery-nav-button {
    width: 32px;
    height: 32px;
  }

  .gallery-dot {
    width: 6px;
    height: 6px;
  }
}
  

==================================================
File: G:\01-Galia\Nueva carpeta\invitacion-matrimonio-astro\src\styles/css/sections/Intro.css
==================================================
/* Landing Intro Layout */
.landing-intro {
  position: relative;
  min-height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  background: var(--color-background, linear-gradient(135deg, #fff4f9 0%, #fff8f0 100%));
}

.landing-intro__background {
  position: absolute;
  inset: 0;
  z-index: 0;
}

.background-overlay {
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at center, transparent 0%, rgba(255,255,255,0.8) 100%);
  backdrop-filter: blur(10px);
}

/* Enhanced Floating Balloons */
.floating-balloons {
  position: absolute;
  inset: -20%;
  width: 140%;
  height: 140%;
  pointer-events: none;
  animation: rotate 40s linear infinite;
}

.balloon {
  position: absolute;
  width: clamp(60px, 15vw, 150px);
  height: auto;
  opacity: 0.6;
  filter: drop-shadow(0 8px 16px rgba(0,0,0,0.1));
  will-change: transform;
  animation: floatAnimation 12s ease-in-out infinite;
}

/* Main Content Container */
.intro-container {
  position: relative;
  z-index: 2;
  width: min(90vw, 1200px);
  padding: clamp(2rem, 5vw, 4rem);
  display: grid;
  gap: clamp(2rem, 4vw, 4rem);
  place-items: center;
}

/* Enhanced Header Styles */
.intro-header {
  text-align: center;
  position: relative;
  width: 100%;
}

.intro-header__title {
  font-family: var(--font-heading);
  font-size: clamp(2.5rem, 8vw, 5rem);
  color: var(--color-primary);
  text-shadow: 
    2px 2px 0 rgba(255,255,255,0.5),
    4px 4px 0 rgba(0,0,0,0.1);
  margin: 0;
  position: relative;
}

.intro-header__badge {
  position: absolute;
  top: -20px;
  right: -40px;
  background: var(--color-primary);
  padding: 1rem;
  border-radius: 50%;
  width: clamp(60px, 15vw, 100px);
  height: clamp(60px, 15vw, 100px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transform: rotate(15deg);
  box-shadow: 
    0 8px 16px rgba(0,0,0,0.1),
    0 0 0 8px rgba(255,255,255,0.8);
  animation: float 6s ease-in-out infinite;
}

.intro-description {
  font-size: clamp(1.1rem, 2.5vw, 1.5rem);
  text-align: center;
  max-width: 70ch;
  line-height: 1.6;
  color: var(--color-text);
}

/* Enhanced Gallery Section */
.intro-gallery {
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
}

/* Enhanced Button Styles */
.intro-action__button {
  position: relative;
  padding: clamp(1rem, 2vw, 1.5rem) clamp(2rem, 4vw, 3rem);
  font-size: clamp(1.1rem, 2.5vw, 1.3rem);
  font-weight: 600;
  color: white;
  background: var(--color-primary);
  border: none;
  border-radius: 999px;
  cursor: pointer;
  overflow: hidden;
  transition: all 0.3s ease;
  box-shadow: 
    0 8px 20px rgba(0,0,0,0.1),
    0 0 0 2px rgba(255,255,255,0.5);
}

.button__shine {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent 0%,
    rgba(255,255,255,0.1) 50%,
    transparent 100%
  );
  transform: rotate(45deg);
  animation: shine 3s infinite;
}

/* Enhanced Animations */
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes float {
  0%, 100% { transform: translateY(0) rotate(15deg); }
  50% { transform: translateY(-20px) rotate(20deg); }
}

@keyframes shine {
  from { transform: translateX(-100%) rotate(45deg); }
  to { transform: translateX(100%) rotate(45deg); }
}

.animate-fade-in {
  animation: fadeIn 1s ease-out forwards;
}

.animate-fade-in-up {
  animation: fadeInUp 1s ease-out forwards;
  opacity: 0;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .intro-container {
    padding: 1.5rem;
    gap: 2rem;
  }

  .intro-header__badge {
    position: relative;
    top: 0;
    right: 0;
    margin: 1rem auto;
  }
}

@media (max-width: 480px) {
  .intro-container {
    padding: 1rem;
    gap: 1.5rem;
  }

  .balloon {
    width: clamp(40px, 12vw, 80px);
  }
}

/* Animation Delays */
.intro-description { animation-delay: 0.2s; }
.intro-gallery { animation-delay: 0.4s; }
.intro-action { animation-delay: 0.6s; }
